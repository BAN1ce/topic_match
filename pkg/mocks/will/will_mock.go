// Code generated by MockGen. DO NOT EDIT.
// Source: .//broker/will/will.go

// Package will is a generated GoMock package.
package will

import (
	gomock "github.com/golang/mock/gomock"
)

// MockPublish is a mock of Publish interface.
type MockPublish struct {
	ctrl     *gomock.Controller
	recorder *MockPublishMockRecorder
}

// MockPublishMockRecorder is the mock recorder for MockPublish.
type MockPublishMockRecorder struct {
	mock *MockPublish
}

// NewMockPublish creates a new mock instance.
func NewMockPublish(ctrl *gomock.Controller) *MockPublish {
	mock := &MockPublish{ctrl: ctrl}
	mock.recorder = &MockPublishMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPublish) EXPECT() *MockPublishMockRecorder {
	return m.recorder
}
