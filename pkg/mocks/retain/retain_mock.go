// Code generated by MockGen. DO NOT EDIT.
// Source: .//broker/retain/retain.go

// Package retain is a generated GoMock package.
package retain

import (
	reflect "reflect"

	retain "github.com/BAN1ce/skyTree/pkg/broker/retain"
	gomock "github.com/golang/mock/gomock"
)

// MockRetain is a mock of Retain interface.
type MockRetain struct {
	ctrl     *gomock.Controller
	recorder *MockRetainMockRecorder
}

// MockRetainMockRecorder is the mock recorder for MockRetain.
type MockRetainMockRecorder struct {
	mock *MockRetain
}

// NewMockRetain creates a new mock instance.
func NewMockRetain(ctrl *gomock.Controller) *MockRetain {
	mock := &MockRetain{ctrl: ctrl}
	mock.recorder = &MockRetainMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRetain) EXPECT() *MockRetainMockRecorder {
	return m.recorder
}

// DeleteRetainMessage mocks base method.
func (m *MockRetain) DeleteRetainMessage(topic string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteRetainMessage", topic)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteRetainMessage indicates an expected call of DeleteRetainMessage.
func (mr *MockRetainMockRecorder) DeleteRetainMessage(topic interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteRetainMessage", reflect.TypeOf((*MockRetain)(nil).DeleteRetainMessage), topic)
}

// GetRetainMessage mocks base method.
func (m *MockRetain) GetRetainMessage(topic string) (*retain.Message, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRetainMessage", topic)
	ret0, _ := ret[0].(*retain.Message)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// GetRetainMessage indicates an expected call of GetRetainMessage.
func (mr *MockRetainMockRecorder) GetRetainMessage(topic interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRetainMessage", reflect.TypeOf((*MockRetain)(nil).GetRetainMessage), topic)
}

// PutRetainMessage mocks base method.
func (m *MockRetain) PutRetainMessage(message *retain.Message) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PutRetainMessage", message)
	ret0, _ := ret[0].(error)
	return ret0
}

// PutRetainMessage indicates an expected call of PutRetainMessage.
func (mr *MockRetainMockRecorder) PutRetainMessage(message interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutRetainMessage", reflect.TypeOf((*MockRetain)(nil).PutRetainMessage), message)
}
